{"version":3,"sources":["components/AccoBox.js","pages/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["AccoBox","useState","isOpen","setIsOpen","state","setState","text","setText","editMode","setEditMode","changeState","className","onClick","console","log","src","alt","onSubmit","event","preventDefault","style","marginLeft","textAlign","type","maxLength","value","onChange","e","changeText","target","handleChange","fontSize","margin","flex","color","MainPage","roomList","setRoomList","class","height","width","marginTop","background","nextRoom","addRoom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEe,SAASA,IAEtB,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,OAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEA,EAAwBJ,mBAAS,UAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,WAEhBL,EADY,OAAVD,EACO,MAEA,OAgBb,OACE,gCACE,qBAAKO,UAAU,mBAAmBC,QAAS,kBAAIT,GAAWD,IAA1D,SACE,sBAAKS,UAAU,oBAAf,UACGE,QAAQC,IAAI,uCAAeV,GACjB,OAAVA,EACC,qBAAKO,UAAU,kBAAkBI,IAAI,oBAAoBC,IAAI,KAE7D,qBAAKL,UAAU,kBAAkBI,IAAI,qBAAqBC,IAAI,KAGhE,sBAAMC,SAjBM,SAACC,GACnBA,EAAMC,iBACNV,GAAaD,IAeP,SACE,sBAAMY,MAAO,CAACC,WAAW,GAAIC,UAAU,SAAvC,UACgB,IAAbd,EACC,+BAAOF,IAEP,uBAAOK,UAAU,kBAAkBY,KAAK,OAAOC,UAAU,IAAIC,MAAOnB,EAAMoB,SAAU,SAACC,GAAD,OA3B7E,SAACA,GACpB,IAAIC,EAAaD,EAAEE,OAAOJ,MAC1BlB,EAAQqB,GAyB+FE,CAAaH,UAK5G,gCACgB,IAAbnB,EACC,qBAAKG,UAAU,eAAeI,IAAI,wBAAcH,QAAS,kBAAIH,GAAaD,IAAWQ,IAAI,KAEzF,sBAAML,UAAU,eAAeC,QAAS,WAAKH,GAAaD,IAA1D,4BAKN,uBAAMG,UAAU,mBAAhB,cAAqCT,EAAS,SAAM,SAApD,YAIHA,GACC,qBAAKS,UAAU,iBAAf,SACa,OAAVP,EACC,yBAAQO,UAAU,cAAcC,QAASF,EAAzC,UACE,qBAAKC,UAAU,cAAcI,IAAI,qBAAqBC,IAAI,KAC1D,sBAAMI,MAAO,CAACC,WAAW,GAAIU,SAAS,GAAIC,OAAO,GAAIC,KAAK,EAAGC,MAAM,QAAnE,mBAGF,yBAAQvB,UAAU,cAAcC,QAASF,EAAzC,UACE,qBAAKC,UAAU,cAAcI,IAAI,sBAAsBC,IAAI,KAC3D,sBAAMI,MAAO,CAACC,WAAW,GAAIU,SAAS,GAAIC,OAAO,GAAIC,KAAK,GAA1D,yBCtEC,SAASE,IAEtB,MAAgClC,mBAAS,CACvC,cAACD,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,IACA,cAACA,EAAD,MAJF,mBAAOoC,EAAP,KAAiBC,EAAjB,KAWA,OACE,gCACE,8BACE,oBAAIC,MAAM,QAAV,qCAEF,8BACGF,IAEH,8BACE,wBAAQhB,MAAO,CAACmB,OAAO,GAAIC,MAAM,GAAIC,UAAU,GAAIC,WAAW,QAAS9B,QAAS,kBAbtE,WACd,IAAI+B,EAAQ,sBAAOP,GAAP,CAAiB,cAACpC,EAAD,MAC7BqC,EAAYM,GAW4EC,IAApF,2CCfOC,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAACwB,EAAD,OCMSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c84c042f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function AccoBox() {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [state, setState] = useState(\"off\");\r\n\r\n  const [text, setText] = useState(\"방\");\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const changeState = () => {\r\n    if (state === \"on\") {\r\n      setState(\"off\")\r\n    } else {\r\n      setState(\"on\")\r\n    }\r\n\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let changeText = e.target.value\r\n    setText(changeText)\r\n  }\r\n\r\n  const enterChange = (event) => {\r\n    event.preventDefault();\r\n    setEditMode(!editMode)\r\n}\r\n\r\n\r\n  return(\r\n    <div >\r\n      <div className=\"accordion-header\" onClick={()=>setIsOpen(!isOpen)}>\r\n        <div className=\"acco-header-inner\">\r\n          {console.log(\"스테이트 값?????\", state)}\r\n          {state === \"on\" ?\r\n            <img className=\"acco-header-img\" src=\"/img/light-on.svg\" alt=\"\"/>\r\n            :\r\n            <img className=\"acco-header-img\" src=\"/img/light-off.svg\" alt=\"\"/>\r\n          }\r\n        \r\n          <form onSubmit={enterChange}>\r\n            <span style={{marginLeft:20, textAlign:'start' }}>\r\n              {editMode === false ?\r\n                <span>{text}</span>\r\n                :\r\n                <input className=\"room-name-style\" type=\"text\" maxLength=\"5\" value={text} onChange={(e) => handleChange(e)} /> \r\n              }\r\n            </span>\r\n          </form>\r\n\r\n            <span>\r\n              {editMode === false ?\r\n                <img className=\"acco-pen-img\" src=\"/img/연필.png\" onClick={()=>setEditMode(!editMode)} alt=\"\"/>\r\n              :\r\n                <span className=\"acco-pen-img\" onClick={()=>{setEditMode(!editMode)}}>저장</span>\r\n              }\r\n            </span>\r\n          \r\n          \r\n          <span className=\"acco-header-icon\"> {isOpen ? '∧' : '∨'} </span>\r\n        </div>         \r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"accordion-body\">\r\n          {state === \"on\" ?\r\n            <button className=\"buttonStyle\" onClick={changeState}>\r\n              <img className=\"toggle_icon\" src=\"/img/toggle-on.svg\" alt=\"\"/>\r\n              <span style={{marginLeft:15, fontSize:15, margin:10, flex:1, color:\"blue\"}}>ON</span> \r\n            </button>\r\n          :\r\n            <button className=\"buttonStyle\" onClick={changeState}>\r\n              <img className=\"toggle_icon\" src=\"/img/toggle-off.svg\" alt=\"\"/>\r\n              <span style={{marginLeft:15, fontSize:15, margin:10, flex:1 }}>OFF</span>\r\n            </button>\r\n          }\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n  );\r\n}","import React, { useState } from 'react';\r\n\r\nimport AccoBox from '../components/AccoBox';\r\n\r\nexport default function MainPage() {\r\n\r\n  const [roomList, setRoomList] = useState([\r\n    <AccoBox />,\r\n    <AccoBox />,\r\n    <AccoBox />,\r\n    <AccoBox />,\r\n  ]);\r\n\r\n  const addRoom = () => {\r\n    let nextRoom = [...roomList, <AccoBox />]\r\n    setRoomList(nextRoom)\r\n  }\r\n  return(\r\n    <div>\r\n      <div>\r\n        <h1 class=\"title\">Home Light Controller</h1>\r\n      </div>\r\n      <div>\r\n        {roomList}\r\n      </div>\r\n      <div>\r\n        <button style={{height:30, width:80, marginTop:60, background:'#fff'}} onClick={()=>addRoom()}>추가하기</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\r\nimport MainPage from './pages/MainPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}